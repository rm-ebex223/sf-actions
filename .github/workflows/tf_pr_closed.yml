on:
  pull_request:
    types: [ closed ]
    branches:
      - main
    paths:
      - '**.tf'

jobs:
  tf_pr_closed_merged:
    # if closed and merged to main, apply TF to main
    name: Terraform PR closed and merged
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    # dump the GH context for troubleshooting
    # should probably remove before actually using this
    - name: Dump Github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform init
      id: init
      run: terraform init

    - name: Terraform format
      id: fmt
      run: terraform fmt -check

    - name: Terraform validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform plan
      id: plan
      run: terraform plan -no-color -compact-warnings
      continue-on-error: true
    
    - name: Check tf plan status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    
    - name: Terraform apply 
      id: apply
      run: terraform apply -no-color -auto-approve
    # add the TF apply output to the closed PR for auditing
    - name: Add apply output to PR
      uses: actions/github-script@v7
      env:
        APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `*Status - terraform apply: ${{ steps.apply.outcome }}
          Merged by: @${{ github.actor }}*

          <details><summary>Apply output</summary>
          
          \`\`\`\n
          ${process.env.APPLY}
          \`\`\`
            
          </details>`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  # tf_pr_closed_not_merged:
  #   # if closed and not merged, dump context and do nothing
  #   name: Terraform PR closed and not merged
  #   if: github.event.pull_request.merged == false
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo PR #${{ github.event.number }} has been closed without being merged

  #   - env:
  #       GITHUB_CONTEXT: ${{ toJSON(github) }}
  #     run: echo "$GITHUB_CONTEXT"